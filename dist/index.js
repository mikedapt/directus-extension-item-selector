import{useStores as e,useItems as t,defineInterface as l}from"@directus/extensions-sdk";import{defineComponent as n,ref as i,resolveComponent as o,openBlock as c,createBlock as s}from"vue";var r=l({id:"item-selector",name:"Item Selector",icon:"arrow_drop_down_circle",description:"Select The Collection and Column to return the Items from the Collection.",component:((e,t)=>{const l=e.__vccOpts||e;for(const[e,n]of t)l[e]=n;return l})(n({props:{value:{type:String,default:null},collection:{type:String,required:!0},field:{type:String,required:!0},collect_select:{type:String,default:null},column_select:{type:String,default:null},starts_with:{type:String,default:null}},emits:["input"],setup(l,{emit:n}){const{useCollectionsStore:o}=e(),c=o(),s=i(l.collect_select),{useFieldsStore:r}=e();r(),c.databaseCollections;const a=l.column_select.replace("{{","").replace("}}",""),u=i([]);var m=null;if(l.starts_with&&(m=l.starts_with),l.column_select){async function d(){const e={fields:i([a]),limit:i(1e3),sort:i(null),search:i(null),filter:i(null),page:i(1)},{getItemCount:l,itemCount:n,getItems:o,items:c}=t(s,e);await o(),await l();const r=c.value;return n.value,r.forEach((e=>{for(let t in e)if("STATE_CODE"==t.replace('"',"")){let l=e[t];(null==m||l.includes(m))&&u.value.push({text:l,value:l})}})),r}async function p(){const e=await d();return JSON.stringify(e),e}p()}return{itemlist:u,itemSelected:function(e){n("input",e)}}}}),[["render",function(e,t,l,n,i,r){const a=o("VSelect");return c(),s(a,{"model-value":e.value,items:e.itemlist,"onUpdate:modelValue":e.itemSelected},null,8,["model-value","items","onUpdate:modelValue"])}],["__file","interface.vue"]]),options:[{field:"collect_select",type:"string",name:"Select Collection",meta:{interface:"system-collection",width:"half",options:{includeSystem:!0,includeSingleton:!1},note:"Pick your Collection Here"}},{field:"column_select",type:"string",name:"Select Column",meta:{interface:"system-display-template",width:"half",options:{collectionField:"collect_select",placeholder:"{{ field }}"},note:"Pick your Column Here"}},{field:"starts_with",type:"string",name:"Starts With",meta:{interface:"input",width:"full",options:{placeholder:"example_"},note:"Filter items based on prefix string. Keep blank for listing all items."}}],types:["string"]});export{r as default};
